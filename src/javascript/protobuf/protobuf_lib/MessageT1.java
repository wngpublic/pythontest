// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message-t1.proto

public final class MessageT1 {
  private MessageT1() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface Test1OrBuilder extends
      // @@protoc_insertion_point(interface_extends:Test1)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated int32 rival = 2;</code>
     * @return A list containing the rival.
     */
    java.util.List<java.lang.Integer> getRivalList();
    /**
     * <code>repeated int32 rival = 2;</code>
     * @return The count of rival.
     */
    int getRivalCount();
    /**
     * <code>repeated int32 rival = 2;</code>
     * @param index The index of the element to return.
     * @return The rival at the given index.
     */
    int getRival(int index);

    /**
     * <code>optional string sval1 = 3;</code>
     * @return Whether the sval1 field is set.
     */
    boolean hasSval1();
    /**
     * <code>optional string sval1 = 3;</code>
     * @return The sval1.
     */
    java.lang.String getSval1();
    /**
     * <code>optional string sval1 = 3;</code>
     * @return The bytes for sval1.
     */
    com.google.protobuf.ByteString
        getSval1Bytes();

    /**
     * <code>optional int32 ival2 = 4;</code>
     * @return Whether the ival2 field is set.
     */
    boolean hasIval2();
    /**
     * <code>optional int32 ival2 = 4;</code>
     * @return The ival2.
     */
    int getIval2();

    /**
     * <code>repeated string rsval = 5;</code>
     * @return A list containing the rsval.
     */
    java.util.List<java.lang.String>
        getRsvalList();
    /**
     * <code>repeated string rsval = 5;</code>
     * @return The count of rsval.
     */
    int getRsvalCount();
    /**
     * <code>repeated string rsval = 5;</code>
     * @param index The index of the element to return.
     * @return The rsval at the given index.
     */
    java.lang.String getRsval(int index);
    /**
     * <code>repeated string rsval = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rsval at the given index.
     */
    com.google.protobuf.ByteString
        getRsvalBytes(int index);

    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     * @return Whether the innert1 field is set.
     */
    boolean hasInnert1();
    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     * @return The innert1.
     */
    MessageT1.Test1.InnerTest1 getInnert1();
    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     */
    MessageT1.Test1.InnerTest1OrBuilder getInnert1OrBuilder();

    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     * @return Whether the innert2 field is set.
     */
    boolean hasInnert2();
    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     * @return The innert2.
     */
    MessageT1.Test1.InnerTest1 getInnert2();
    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     */
    MessageT1.Test1.InnerTest1OrBuilder getInnert2OrBuilder();

    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    java.util.List<MessageT1.Test1.InnerTest1> 
        getRinnertList();
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    MessageT1.Test1.InnerTest1 getRinnert(int index);
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    int getRinnertCount();
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    java.util.List<? extends MessageT1.Test1.InnerTest1OrBuilder> 
        getRinnertOrBuilderList();
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    MessageT1.Test1.InnerTest1OrBuilder getRinnertOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Test1}
   */
  public static final class Test1 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Test1)
      Test1OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Test1.newBuilder() to construct.
    private Test1(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Test1() {
      rival_ = emptyIntList();
      sval1_ = "";
      rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      rinnert_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Test1();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Test1(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                rival_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              rival_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                rival_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rival_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sval1_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              ival2_ = input.readInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                rsval_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              rsval_.add(bs);
              break;
            }
            case 50: {
              MessageT1.Test1.InnerTest1.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = innert1_.toBuilder();
              }
              innert1_ = input.readMessage(MessageT1.Test1.InnerTest1.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(innert1_);
                innert1_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 58: {
              MessageT1.Test1.InnerTest1.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = innert2_.toBuilder();
              }
              innert2_ = input.readMessage(MessageT1.Test1.InnerTest1.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(innert2_);
                innert2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                rinnert_ = new java.util.ArrayList<MessageT1.Test1.InnerTest1>();
                mutable_bitField0_ |= 0x00000080;
              }
              rinnert_.add(
                  input.readMessage(MessageT1.Test1.InnerTest1.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          rival_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          rsval_ = rsval_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000080) != 0)) {
          rinnert_ = java.util.Collections.unmodifiableList(rinnert_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MessageT1.internal_static_Test1_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MessageT1.internal_static_Test1_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MessageT1.Test1.class, MessageT1.Test1.Builder.class);
    }

    public interface InnerTest1OrBuilder extends
        // @@protoc_insertion_point(interface_extends:Test1.InnerTest1)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      int getId();

      /**
       * <code>repeated int32 rival = 2;</code>
       * @return A list containing the rival.
       */
      java.util.List<java.lang.Integer> getRivalList();
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return The count of rival.
       */
      int getRivalCount();
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param index The index of the element to return.
       * @return The rival at the given index.
       */
      int getRival(int index);

      /**
       * <code>optional string sval1 = 3;</code>
       * @return Whether the sval1 field is set.
       */
      boolean hasSval1();
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The sval1.
       */
      java.lang.String getSval1();
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The bytes for sval1.
       */
      com.google.protobuf.ByteString
          getSval1Bytes();

      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return Whether the ival2 field is set.
       */
      boolean hasIval2();
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return The ival2.
       */
      int getIval2();

      /**
       * <code>repeated string rsval = 5;</code>
       * @return A list containing the rsval.
       */
      java.util.List<java.lang.String>
          getRsvalList();
      /**
       * <code>repeated string rsval = 5;</code>
       * @return The count of rsval.
       */
      int getRsvalCount();
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the element to return.
       * @return The rsval at the given index.
       */
      java.lang.String getRsval(int index);
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rsval at the given index.
       */
      com.google.protobuf.ByteString
          getRsvalBytes(int index);
    }
    /**
     * Protobuf type {@code Test1.InnerTest1}
     */
    public static final class InnerTest1 extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Test1.InnerTest1)
        InnerTest1OrBuilder {
    private static final long serialVersionUID = 0L;
      // Use InnerTest1.newBuilder() to construct.
      private InnerTest1(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InnerTest1() {
        rival_ = emptyIntList();
        sval1_ = "";
        rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new InnerTest1();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private InnerTest1(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  rival_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                rival_.addInt(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                  rival_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  rival_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                sval1_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000004;
                ival2_ = input.readInt32();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                  rsval_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000010;
                }
                rsval_.add(bs);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            rival_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000010) != 0)) {
            rsval_ = rsval_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageT1.internal_static_Test1_InnerTest1_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageT1.internal_static_Test1_InnerTest1_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageT1.Test1.InnerTest1.class, MessageT1.Test1.InnerTest1.Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }

      public static final int RIVAL_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.IntList rival_;
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return A list containing the rival.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getRivalList() {
        return rival_;
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return The count of rival.
       */
      public int getRivalCount() {
        return rival_.size();
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param index The index of the element to return.
       * @return The rival at the given index.
       */
      public int getRival(int index) {
        return rival_.getInt(index);
      }

      public static final int SVAL1_FIELD_NUMBER = 3;
      private volatile java.lang.Object sval1_;
      /**
       * <code>optional string sval1 = 3;</code>
       * @return Whether the sval1 field is set.
       */
      @java.lang.Override
      public boolean hasSval1() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The sval1.
       */
      @java.lang.Override
      public java.lang.String getSval1() {
        java.lang.Object ref = sval1_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sval1_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The bytes for sval1.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSval1Bytes() {
        java.lang.Object ref = sval1_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sval1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int IVAL2_FIELD_NUMBER = 4;
      private int ival2_;
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return Whether the ival2 field is set.
       */
      @java.lang.Override
      public boolean hasIval2() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return The ival2.
       */
      @java.lang.Override
      public int getIval2() {
        return ival2_;
      }

      public static final int RSVAL_FIELD_NUMBER = 5;
      private com.google.protobuf.LazyStringList rsval_;
      /**
       * <code>repeated string rsval = 5;</code>
       * @return A list containing the rsval.
       */
      public com.google.protobuf.ProtocolStringList
          getRsvalList() {
        return rsval_;
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @return The count of rsval.
       */
      public int getRsvalCount() {
        return rsval_.size();
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the element to return.
       * @return The rsval at the given index.
       */
      public java.lang.String getRsval(int index) {
        return rsval_.get(index);
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rsval at the given index.
       */
      public com.google.protobuf.ByteString
          getRsvalBytes(int index) {
        return rsval_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, id_);
        }
        for (int i = 0; i < rival_.size(); i++) {
          output.writeInt32(2, rival_.getInt(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sval1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(4, ival2_);
        }
        for (int i = 0; i < rsval_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, rsval_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < rival_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(rival_.getInt(i));
          }
          size += dataSize;
          size += 1 * getRivalList().size();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sval1_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, ival2_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < rsval_.size(); i++) {
            dataSize += computeStringSizeNoTag(rsval_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getRsvalList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof MessageT1.Test1.InnerTest1)) {
          return super.equals(obj);
        }
        MessageT1.Test1.InnerTest1 other = (MessageT1.Test1.InnerTest1) obj;

        if (hasId() != other.hasId()) return false;
        if (hasId()) {
          if (getId()
              != other.getId()) return false;
        }
        if (!getRivalList()
            .equals(other.getRivalList())) return false;
        if (hasSval1() != other.hasSval1()) return false;
        if (hasSval1()) {
          if (!getSval1()
              .equals(other.getSval1())) return false;
        }
        if (hasIval2() != other.hasIval2()) return false;
        if (hasIval2()) {
          if (getIval2()
              != other.getIval2()) return false;
        }
        if (!getRsvalList()
            .equals(other.getRsvalList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (getRivalCount() > 0) {
          hash = (37 * hash) + RIVAL_FIELD_NUMBER;
          hash = (53 * hash) + getRivalList().hashCode();
        }
        if (hasSval1()) {
          hash = (37 * hash) + SVAL1_FIELD_NUMBER;
          hash = (53 * hash) + getSval1().hashCode();
        }
        if (hasIval2()) {
          hash = (37 * hash) + IVAL2_FIELD_NUMBER;
          hash = (53 * hash) + getIval2();
        }
        if (getRsvalCount() > 0) {
          hash = (37 * hash) + RSVAL_FIELD_NUMBER;
          hash = (53 * hash) + getRsvalList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static MessageT1.Test1.InnerTest1 parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static MessageT1.Test1.InnerTest1 parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static MessageT1.Test1.InnerTest1 parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static MessageT1.Test1.InnerTest1 parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(MessageT1.Test1.InnerTest1 prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Test1.InnerTest1}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Test1.InnerTest1)
          MessageT1.Test1.InnerTest1OrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return MessageT1.internal_static_Test1_InnerTest1_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return MessageT1.internal_static_Test1_InnerTest1_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  MessageT1.Test1.InnerTest1.class, MessageT1.Test1.InnerTest1.Builder.class);
        }

        // Construct using MessageT1.Test1.InnerTest1.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          rival_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          sval1_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          ival2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return MessageT1.internal_static_Test1_InnerTest1_descriptor;
        }

        @java.lang.Override
        public MessageT1.Test1.InnerTest1 getDefaultInstanceForType() {
          return MessageT1.Test1.InnerTest1.getDefaultInstance();
        }

        @java.lang.Override
        public MessageT1.Test1.InnerTest1 build() {
          MessageT1.Test1.InnerTest1 result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public MessageT1.Test1.InnerTest1 buildPartial() {
          MessageT1.Test1.InnerTest1 result = new MessageT1.Test1.InnerTest1(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.id_ = id_;
            to_bitField0_ |= 0x00000001;
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            rival_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rival_ = rival_;
          if (((from_bitField0_ & 0x00000004) != 0)) {
            to_bitField0_ |= 0x00000002;
          }
          result.sval1_ = sval1_;
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.ival2_ = ival2_;
            to_bitField0_ |= 0x00000004;
          }
          if (((bitField0_ & 0x00000010) != 0)) {
            rsval_ = rsval_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rsval_ = rsval_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof MessageT1.Test1.InnerTest1) {
            return mergeFrom((MessageT1.Test1.InnerTest1)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(MessageT1.Test1.InnerTest1 other) {
          if (other == MessageT1.Test1.InnerTest1.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (!other.rival_.isEmpty()) {
            if (rival_.isEmpty()) {
              rival_ = other.rival_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRivalIsMutable();
              rival_.addAll(other.rival_);
            }
            onChanged();
          }
          if (other.hasSval1()) {
            bitField0_ |= 0x00000004;
            sval1_ = other.sval1_;
            onChanged();
          }
          if (other.hasIval2()) {
            setIval2(other.getIval2());
          }
          if (!other.rsval_.isEmpty()) {
            if (rsval_.isEmpty()) {
              rsval_ = other.rsval_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRsvalIsMutable();
              rsval_.addAll(other.rsval_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasId()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          MessageT1.Test1.InnerTest1 parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (MessageT1.Test1.InnerTest1) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <code>required int32 id = 1;</code>
         * @return Whether the id field is set.
         */
        @java.lang.Override
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required int32 id = 1;</code>
         * @return The id.
         */
        @java.lang.Override
        public int getId() {
          return id_;
        }
        /**
         * <code>required int32 id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList rival_ = emptyIntList();
        private void ensureRivalIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            rival_ = mutableCopy(rival_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @return A list containing the rival.
         */
        public java.util.List<java.lang.Integer>
            getRivalList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(rival_) : rival_;
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @return The count of rival.
         */
        public int getRivalCount() {
          return rival_.size();
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @param index The index of the element to return.
         * @return The rival at the given index.
         */
        public int getRival(int index) {
          return rival_.getInt(index);
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @param index The index to set the value at.
         * @param value The rival to set.
         * @return This builder for chaining.
         */
        public Builder setRival(
            int index, int value) {
          ensureRivalIsMutable();
          rival_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @param value The rival to add.
         * @return This builder for chaining.
         */
        public Builder addRival(int value) {
          ensureRivalIsMutable();
          rival_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @param values The rival to add.
         * @return This builder for chaining.
         */
        public Builder addAllRival(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureRivalIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rival_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 rival = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearRival() {
          rival_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private java.lang.Object sval1_ = "";
        /**
         * <code>optional string sval1 = 3;</code>
         * @return Whether the sval1 field is set.
         */
        public boolean hasSval1() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string sval1 = 3;</code>
         * @return The sval1.
         */
        public java.lang.String getSval1() {
          java.lang.Object ref = sval1_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sval1_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string sval1 = 3;</code>
         * @return The bytes for sval1.
         */
        public com.google.protobuf.ByteString
            getSval1Bytes() {
          java.lang.Object ref = sval1_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sval1_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string sval1 = 3;</code>
         * @param value The sval1 to set.
         * @return This builder for chaining.
         */
        public Builder setSval1(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sval1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string sval1 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSval1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          sval1_ = getDefaultInstance().getSval1();
          onChanged();
          return this;
        }
        /**
         * <code>optional string sval1 = 3;</code>
         * @param value The bytes for sval1 to set.
         * @return This builder for chaining.
         */
        public Builder setSval1Bytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          sval1_ = value;
          onChanged();
          return this;
        }

        private int ival2_ ;
        /**
         * <code>optional int32 ival2 = 4;</code>
         * @return Whether the ival2 field is set.
         */
        @java.lang.Override
        public boolean hasIval2() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int32 ival2 = 4;</code>
         * @return The ival2.
         */
        @java.lang.Override
        public int getIval2() {
          return ival2_;
        }
        /**
         * <code>optional int32 ival2 = 4;</code>
         * @param value The ival2 to set.
         * @return This builder for chaining.
         */
        public Builder setIval2(int value) {
          bitField0_ |= 0x00000008;
          ival2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 ival2 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearIval2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          ival2_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureRsvalIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            rsval_ = new com.google.protobuf.LazyStringArrayList(rsval_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @return A list containing the rsval.
         */
        public com.google.protobuf.ProtocolStringList
            getRsvalList() {
          return rsval_.getUnmodifiableView();
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @return The count of rsval.
         */
        public int getRsvalCount() {
          return rsval_.size();
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param index The index of the element to return.
         * @return The rsval at the given index.
         */
        public java.lang.String getRsval(int index) {
          return rsval_.get(index);
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param index The index of the value to return.
         * @return The bytes of the rsval at the given index.
         */
        public com.google.protobuf.ByteString
            getRsvalBytes(int index) {
          return rsval_.getByteString(index);
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param index The index to set the value at.
         * @param value The rsval to set.
         * @return This builder for chaining.
         */
        public Builder setRsval(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
          rsval_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param value The rsval to add.
         * @return This builder for chaining.
         */
        public Builder addRsval(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
          rsval_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param values The rsval to add.
         * @return This builder for chaining.
         */
        public Builder addAllRsval(
            java.lang.Iterable<java.lang.String> values) {
          ensureRsvalIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rsval_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearRsval() {
          rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string rsval = 5;</code>
         * @param value The bytes of the rsval to add.
         * @return This builder for chaining.
         */
        public Builder addRsvalBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
          rsval_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Test1.InnerTest1)
      }

      // @@protoc_insertion_point(class_scope:Test1.InnerTest1)
      private static final MessageT1.Test1.InnerTest1 DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new MessageT1.Test1.InnerTest1();
      }

      public static MessageT1.Test1.InnerTest1 getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<InnerTest1>
          PARSER = new com.google.protobuf.AbstractParser<InnerTest1>() {
        @java.lang.Override
        public InnerTest1 parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new InnerTest1(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InnerTest1> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InnerTest1> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public MessageT1.Test1.InnerTest1 getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int RIVAL_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList rival_;
    /**
     * <code>repeated int32 rival = 2;</code>
     * @return A list containing the rival.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRivalList() {
      return rival_;
    }
    /**
     * <code>repeated int32 rival = 2;</code>
     * @return The count of rival.
     */
    public int getRivalCount() {
      return rival_.size();
    }
    /**
     * <code>repeated int32 rival = 2;</code>
     * @param index The index of the element to return.
     * @return The rival at the given index.
     */
    public int getRival(int index) {
      return rival_.getInt(index);
    }

    public static final int SVAL1_FIELD_NUMBER = 3;
    private volatile java.lang.Object sval1_;
    /**
     * <code>optional string sval1 = 3;</code>
     * @return Whether the sval1 field is set.
     */
    @java.lang.Override
    public boolean hasSval1() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string sval1 = 3;</code>
     * @return The sval1.
     */
    @java.lang.Override
    public java.lang.String getSval1() {
      java.lang.Object ref = sval1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sval1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sval1 = 3;</code>
     * @return The bytes for sval1.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSval1Bytes() {
      java.lang.Object ref = sval1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sval1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IVAL2_FIELD_NUMBER = 4;
    private int ival2_;
    /**
     * <code>optional int32 ival2 = 4;</code>
     * @return Whether the ival2 field is set.
     */
    @java.lang.Override
    public boolean hasIval2() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 ival2 = 4;</code>
     * @return The ival2.
     */
    @java.lang.Override
    public int getIval2() {
      return ival2_;
    }

    public static final int RSVAL_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList rsval_;
    /**
     * <code>repeated string rsval = 5;</code>
     * @return A list containing the rsval.
     */
    public com.google.protobuf.ProtocolStringList
        getRsvalList() {
      return rsval_;
    }
    /**
     * <code>repeated string rsval = 5;</code>
     * @return The count of rsval.
     */
    public int getRsvalCount() {
      return rsval_.size();
    }
    /**
     * <code>repeated string rsval = 5;</code>
     * @param index The index of the element to return.
     * @return The rsval at the given index.
     */
    public java.lang.String getRsval(int index) {
      return rsval_.get(index);
    }
    /**
     * <code>repeated string rsval = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rsval at the given index.
     */
    public com.google.protobuf.ByteString
        getRsvalBytes(int index) {
      return rsval_.getByteString(index);
    }

    public static final int INNERT1_FIELD_NUMBER = 6;
    private MessageT1.Test1.InnerTest1 innert1_;
    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     * @return Whether the innert1 field is set.
     */
    @java.lang.Override
    public boolean hasInnert1() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     * @return The innert1.
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1 getInnert1() {
      return innert1_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert1_;
    }
    /**
     * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1OrBuilder getInnert1OrBuilder() {
      return innert1_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert1_;
    }

    public static final int INNERT2_FIELD_NUMBER = 7;
    private MessageT1.Test1.InnerTest1 innert2_;
    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     * @return Whether the innert2 field is set.
     */
    @java.lang.Override
    public boolean hasInnert2() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     * @return The innert2.
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1 getInnert2() {
      return innert2_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert2_;
    }
    /**
     * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1OrBuilder getInnert2OrBuilder() {
      return innert2_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert2_;
    }

    public static final int RINNERT_FIELD_NUMBER = 8;
    private java.util.List<MessageT1.Test1.InnerTest1> rinnert_;
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    @java.lang.Override
    public java.util.List<MessageT1.Test1.InnerTest1> getRinnertList() {
      return rinnert_;
    }
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends MessageT1.Test1.InnerTest1OrBuilder> 
        getRinnertOrBuilderList() {
      return rinnert_;
    }
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    @java.lang.Override
    public int getRinnertCount() {
      return rinnert_.size();
    }
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1 getRinnert(int index) {
      return rinnert_.get(index);
    }
    /**
     * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
     */
    @java.lang.Override
    public MessageT1.Test1.InnerTest1OrBuilder getRinnertOrBuilder(
        int index) {
      return rinnert_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasInnert1()) {
        if (!getInnert1().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInnert2()) {
        if (!getInnert2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRinnertCount(); i++) {
        if (!getRinnert(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < rival_.size(); i++) {
        output.writeInt32(2, rival_.getInt(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sval1_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, ival2_);
      }
      for (int i = 0; i < rsval_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, rsval_.getRaw(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(6, getInnert1());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getInnert2());
      }
      for (int i = 0; i < rinnert_.size(); i++) {
        output.writeMessage(8, rinnert_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rival_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rival_.getInt(i));
        }
        size += dataSize;
        size += 1 * getRivalList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sval1_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ival2_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rsval_.size(); i++) {
          dataSize += computeStringSizeNoTag(rsval_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRsvalList().size();
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getInnert1());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getInnert2());
      }
      for (int i = 0; i < rinnert_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, rinnert_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MessageT1.Test1)) {
        return super.equals(obj);
      }
      MessageT1.Test1 other = (MessageT1.Test1) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (!getRivalList()
          .equals(other.getRivalList())) return false;
      if (hasSval1() != other.hasSval1()) return false;
      if (hasSval1()) {
        if (!getSval1()
            .equals(other.getSval1())) return false;
      }
      if (hasIval2() != other.hasIval2()) return false;
      if (hasIval2()) {
        if (getIval2()
            != other.getIval2()) return false;
      }
      if (!getRsvalList()
          .equals(other.getRsvalList())) return false;
      if (hasInnert1() != other.hasInnert1()) return false;
      if (hasInnert1()) {
        if (!getInnert1()
            .equals(other.getInnert1())) return false;
      }
      if (hasInnert2() != other.hasInnert2()) return false;
      if (hasInnert2()) {
        if (!getInnert2()
            .equals(other.getInnert2())) return false;
      }
      if (!getRinnertList()
          .equals(other.getRinnertList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (getRivalCount() > 0) {
        hash = (37 * hash) + RIVAL_FIELD_NUMBER;
        hash = (53 * hash) + getRivalList().hashCode();
      }
      if (hasSval1()) {
        hash = (37 * hash) + SVAL1_FIELD_NUMBER;
        hash = (53 * hash) + getSval1().hashCode();
      }
      if (hasIval2()) {
        hash = (37 * hash) + IVAL2_FIELD_NUMBER;
        hash = (53 * hash) + getIval2();
      }
      if (getRsvalCount() > 0) {
        hash = (37 * hash) + RSVAL_FIELD_NUMBER;
        hash = (53 * hash) + getRsvalList().hashCode();
      }
      if (hasInnert1()) {
        hash = (37 * hash) + INNERT1_FIELD_NUMBER;
        hash = (53 * hash) + getInnert1().hashCode();
      }
      if (hasInnert2()) {
        hash = (37 * hash) + INNERT2_FIELD_NUMBER;
        hash = (53 * hash) + getInnert2().hashCode();
      }
      if (getRinnertCount() > 0) {
        hash = (37 * hash) + RINNERT_FIELD_NUMBER;
        hash = (53 * hash) + getRinnertList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MessageT1.Test1 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageT1.Test1 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageT1.Test1 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageT1.Test1 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageT1.Test1 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MessageT1.Test1 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MessageT1.Test1 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageT1.Test1 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageT1.Test1 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static MessageT1.Test1 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MessageT1.Test1 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static MessageT1.Test1 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MessageT1.Test1 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Test1}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Test1)
        MessageT1.Test1OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MessageT1.internal_static_Test1_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MessageT1.internal_static_Test1_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MessageT1.Test1.class, MessageT1.Test1.Builder.class);
      }

      // Construct using MessageT1.Test1.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInnert1FieldBuilder();
          getInnert2FieldBuilder();
          getRinnertFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rival_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        sval1_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ival2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (innert1Builder_ == null) {
          innert1_ = null;
        } else {
          innert1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (innert2Builder_ == null) {
          innert2_ = null;
        } else {
          innert2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (rinnertBuilder_ == null) {
          rinnert_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          rinnertBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MessageT1.internal_static_Test1_descriptor;
      }

      @java.lang.Override
      public MessageT1.Test1 getDefaultInstanceForType() {
        return MessageT1.Test1.getDefaultInstance();
      }

      @java.lang.Override
      public MessageT1.Test1 build() {
        MessageT1.Test1 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public MessageT1.Test1 buildPartial() {
        MessageT1.Test1 result = new MessageT1.Test1(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          rival_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rival_ = rival_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sval1_ = sval1_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ival2_ = ival2_;
          to_bitField0_ |= 0x00000004;
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          rsval_ = rsval_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.rsval_ = rsval_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (innert1Builder_ == null) {
            result.innert1_ = innert1_;
          } else {
            result.innert1_ = innert1Builder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          if (innert2Builder_ == null) {
            result.innert2_ = innert2_;
          } else {
            result.innert2_ = innert2Builder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (rinnertBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            rinnert_ = java.util.Collections.unmodifiableList(rinnert_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.rinnert_ = rinnert_;
        } else {
          result.rinnert_ = rinnertBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MessageT1.Test1) {
          return mergeFrom((MessageT1.Test1)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MessageT1.Test1 other) {
        if (other == MessageT1.Test1.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.rival_.isEmpty()) {
          if (rival_.isEmpty()) {
            rival_ = other.rival_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRivalIsMutable();
            rival_.addAll(other.rival_);
          }
          onChanged();
        }
        if (other.hasSval1()) {
          bitField0_ |= 0x00000004;
          sval1_ = other.sval1_;
          onChanged();
        }
        if (other.hasIval2()) {
          setIval2(other.getIval2());
        }
        if (!other.rsval_.isEmpty()) {
          if (rsval_.isEmpty()) {
            rsval_ = other.rsval_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureRsvalIsMutable();
            rsval_.addAll(other.rsval_);
          }
          onChanged();
        }
        if (other.hasInnert1()) {
          mergeInnert1(other.getInnert1());
        }
        if (other.hasInnert2()) {
          mergeInnert2(other.getInnert2());
        }
        if (rinnertBuilder_ == null) {
          if (!other.rinnert_.isEmpty()) {
            if (rinnert_.isEmpty()) {
              rinnert_ = other.rinnert_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRinnertIsMutable();
              rinnert_.addAll(other.rinnert_);
            }
            onChanged();
          }
        } else {
          if (!other.rinnert_.isEmpty()) {
            if (rinnertBuilder_.isEmpty()) {
              rinnertBuilder_.dispose();
              rinnertBuilder_ = null;
              rinnert_ = other.rinnert_;
              bitField0_ = (bitField0_ & ~0x00000080);
              rinnertBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRinnertFieldBuilder() : null;
            } else {
              rinnertBuilder_.addAllMessages(other.rinnert_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (hasInnert1()) {
          if (!getInnert1().isInitialized()) {
            return false;
          }
        }
        if (hasInnert2()) {
          if (!getInnert2().isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getRinnertCount(); i++) {
          if (!getRinnert(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        MessageT1.Test1 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (MessageT1.Test1) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rival_ = emptyIntList();
      private void ensureRivalIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rival_ = mutableCopy(rival_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return A list containing the rival.
       */
      public java.util.List<java.lang.Integer>
          getRivalList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rival_) : rival_;
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return The count of rival.
       */
      public int getRivalCount() {
        return rival_.size();
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param index The index of the element to return.
       * @return The rival at the given index.
       */
      public int getRival(int index) {
        return rival_.getInt(index);
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param index The index to set the value at.
       * @param value The rival to set.
       * @return This builder for chaining.
       */
      public Builder setRival(
          int index, int value) {
        ensureRivalIsMutable();
        rival_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param value The rival to add.
       * @return This builder for chaining.
       */
      public Builder addRival(int value) {
        ensureRivalIsMutable();
        rival_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @param values The rival to add.
       * @return This builder for chaining.
       */
      public Builder addAllRival(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRivalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rival_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 rival = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRival() {
        rival_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.lang.Object sval1_ = "";
      /**
       * <code>optional string sval1 = 3;</code>
       * @return Whether the sval1 field is set.
       */
      public boolean hasSval1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The sval1.
       */
      public java.lang.String getSval1() {
        java.lang.Object ref = sval1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sval1_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @return The bytes for sval1.
       */
      public com.google.protobuf.ByteString
          getSval1Bytes() {
        java.lang.Object ref = sval1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sval1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @param value The sval1 to set.
       * @return This builder for chaining.
       */
      public Builder setSval1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sval1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSval1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sval1_ = getDefaultInstance().getSval1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sval1 = 3;</code>
       * @param value The bytes for sval1 to set.
       * @return This builder for chaining.
       */
      public Builder setSval1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sval1_ = value;
        onChanged();
        return this;
      }

      private int ival2_ ;
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return Whether the ival2 field is set.
       */
      @java.lang.Override
      public boolean hasIval2() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return The ival2.
       */
      @java.lang.Override
      public int getIval2() {
        return ival2_;
      }
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @param value The ival2 to set.
       * @return This builder for chaining.
       */
      public Builder setIval2(int value) {
        bitField0_ |= 0x00000008;
        ival2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ival2 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIval2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ival2_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRsvalIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          rsval_ = new com.google.protobuf.LazyStringArrayList(rsval_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @return A list containing the rsval.
       */
      public com.google.protobuf.ProtocolStringList
          getRsvalList() {
        return rsval_.getUnmodifiableView();
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @return The count of rsval.
       */
      public int getRsvalCount() {
        return rsval_.size();
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the element to return.
       * @return The rsval at the given index.
       */
      public java.lang.String getRsval(int index) {
        return rsval_.get(index);
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rsval at the given index.
       */
      public com.google.protobuf.ByteString
          getRsvalBytes(int index) {
        return rsval_.getByteString(index);
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param index The index to set the value at.
       * @param value The rsval to set.
       * @return This builder for chaining.
       */
      public Builder setRsval(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
        rsval_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param value The rsval to add.
       * @return This builder for chaining.
       */
      public Builder addRsval(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
        rsval_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param values The rsval to add.
       * @return This builder for chaining.
       */
      public Builder addAllRsval(
          java.lang.Iterable<java.lang.String> values) {
        ensureRsvalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rsval_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearRsval() {
        rsval_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string rsval = 5;</code>
       * @param value The bytes of the rsval to add.
       * @return This builder for chaining.
       */
      public Builder addRsvalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRsvalIsMutable();
        rsval_.add(value);
        onChanged();
        return this;
      }

      private MessageT1.Test1.InnerTest1 innert1_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> innert1Builder_;
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       * @return Whether the innert1 field is set.
       */
      public boolean hasInnert1() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       * @return The innert1.
       */
      public MessageT1.Test1.InnerTest1 getInnert1() {
        if (innert1Builder_ == null) {
          return innert1_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert1_;
        } else {
          return innert1Builder_.getMessage();
        }
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public Builder setInnert1(MessageT1.Test1.InnerTest1 value) {
        if (innert1Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          innert1_ = value;
          onChanged();
        } else {
          innert1Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public Builder setInnert1(
          MessageT1.Test1.InnerTest1.Builder builderForValue) {
        if (innert1Builder_ == null) {
          innert1_ = builderForValue.build();
          onChanged();
        } else {
          innert1Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public Builder mergeInnert1(MessageT1.Test1.InnerTest1 value) {
        if (innert1Builder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              innert1_ != null &&
              innert1_ != MessageT1.Test1.InnerTest1.getDefaultInstance()) {
            innert1_ =
              MessageT1.Test1.InnerTest1.newBuilder(innert1_).mergeFrom(value).buildPartial();
          } else {
            innert1_ = value;
          }
          onChanged();
        } else {
          innert1Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public Builder clearInnert1() {
        if (innert1Builder_ == null) {
          innert1_ = null;
          onChanged();
        } else {
          innert1Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public MessageT1.Test1.InnerTest1.Builder getInnert1Builder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getInnert1FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      public MessageT1.Test1.InnerTest1OrBuilder getInnert1OrBuilder() {
        if (innert1Builder_ != null) {
          return innert1Builder_.getMessageOrBuilder();
        } else {
          return innert1_ == null ?
              MessageT1.Test1.InnerTest1.getDefaultInstance() : innert1_;
        }
      }
      /**
       * <code>optional .Test1.InnerTest1 innert1 = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> 
          getInnert1FieldBuilder() {
        if (innert1Builder_ == null) {
          innert1Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder>(
                  getInnert1(),
                  getParentForChildren(),
                  isClean());
          innert1_ = null;
        }
        return innert1Builder_;
      }

      private MessageT1.Test1.InnerTest1 innert2_;
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> innert2Builder_;
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       * @return Whether the innert2 field is set.
       */
      public boolean hasInnert2() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       * @return The innert2.
       */
      public MessageT1.Test1.InnerTest1 getInnert2() {
        if (innert2Builder_ == null) {
          return innert2_ == null ? MessageT1.Test1.InnerTest1.getDefaultInstance() : innert2_;
        } else {
          return innert2Builder_.getMessage();
        }
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public Builder setInnert2(MessageT1.Test1.InnerTest1 value) {
        if (innert2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          innert2_ = value;
          onChanged();
        } else {
          innert2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public Builder setInnert2(
          MessageT1.Test1.InnerTest1.Builder builderForValue) {
        if (innert2Builder_ == null) {
          innert2_ = builderForValue.build();
          onChanged();
        } else {
          innert2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public Builder mergeInnert2(MessageT1.Test1.InnerTest1 value) {
        if (innert2Builder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
              innert2_ != null &&
              innert2_ != MessageT1.Test1.InnerTest1.getDefaultInstance()) {
            innert2_ =
              MessageT1.Test1.InnerTest1.newBuilder(innert2_).mergeFrom(value).buildPartial();
          } else {
            innert2_ = value;
          }
          onChanged();
        } else {
          innert2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public Builder clearInnert2() {
        if (innert2Builder_ == null) {
          innert2_ = null;
          onChanged();
        } else {
          innert2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public MessageT1.Test1.InnerTest1.Builder getInnert2Builder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getInnert2FieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      public MessageT1.Test1.InnerTest1OrBuilder getInnert2OrBuilder() {
        if (innert2Builder_ != null) {
          return innert2Builder_.getMessageOrBuilder();
        } else {
          return innert2_ == null ?
              MessageT1.Test1.InnerTest1.getDefaultInstance() : innert2_;
        }
      }
      /**
       * <code>optional .Test1.InnerTest1 innert2 = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> 
          getInnert2FieldBuilder() {
        if (innert2Builder_ == null) {
          innert2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder>(
                  getInnert2(),
                  getParentForChildren(),
                  isClean());
          innert2_ = null;
        }
        return innert2Builder_;
      }

      private java.util.List<MessageT1.Test1.InnerTest1> rinnert_ =
        java.util.Collections.emptyList();
      private void ensureRinnertIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          rinnert_ = new java.util.ArrayList<MessageT1.Test1.InnerTest1>(rinnert_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> rinnertBuilder_;

      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public java.util.List<MessageT1.Test1.InnerTest1> getRinnertList() {
        if (rinnertBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rinnert_);
        } else {
          return rinnertBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public int getRinnertCount() {
        if (rinnertBuilder_ == null) {
          return rinnert_.size();
        } else {
          return rinnertBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public MessageT1.Test1.InnerTest1 getRinnert(int index) {
        if (rinnertBuilder_ == null) {
          return rinnert_.get(index);
        } else {
          return rinnertBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder setRinnert(
          int index, MessageT1.Test1.InnerTest1 value) {
        if (rinnertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRinnertIsMutable();
          rinnert_.set(index, value);
          onChanged();
        } else {
          rinnertBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder setRinnert(
          int index, MessageT1.Test1.InnerTest1.Builder builderForValue) {
        if (rinnertBuilder_ == null) {
          ensureRinnertIsMutable();
          rinnert_.set(index, builderForValue.build());
          onChanged();
        } else {
          rinnertBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder addRinnert(MessageT1.Test1.InnerTest1 value) {
        if (rinnertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRinnertIsMutable();
          rinnert_.add(value);
          onChanged();
        } else {
          rinnertBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder addRinnert(
          int index, MessageT1.Test1.InnerTest1 value) {
        if (rinnertBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRinnertIsMutable();
          rinnert_.add(index, value);
          onChanged();
        } else {
          rinnertBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder addRinnert(
          MessageT1.Test1.InnerTest1.Builder builderForValue) {
        if (rinnertBuilder_ == null) {
          ensureRinnertIsMutable();
          rinnert_.add(builderForValue.build());
          onChanged();
        } else {
          rinnertBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder addRinnert(
          int index, MessageT1.Test1.InnerTest1.Builder builderForValue) {
        if (rinnertBuilder_ == null) {
          ensureRinnertIsMutable();
          rinnert_.add(index, builderForValue.build());
          onChanged();
        } else {
          rinnertBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder addAllRinnert(
          java.lang.Iterable<? extends MessageT1.Test1.InnerTest1> values) {
        if (rinnertBuilder_ == null) {
          ensureRinnertIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rinnert_);
          onChanged();
        } else {
          rinnertBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder clearRinnert() {
        if (rinnertBuilder_ == null) {
          rinnert_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          rinnertBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public Builder removeRinnert(int index) {
        if (rinnertBuilder_ == null) {
          ensureRinnertIsMutable();
          rinnert_.remove(index);
          onChanged();
        } else {
          rinnertBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public MessageT1.Test1.InnerTest1.Builder getRinnertBuilder(
          int index) {
        return getRinnertFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public MessageT1.Test1.InnerTest1OrBuilder getRinnertOrBuilder(
          int index) {
        if (rinnertBuilder_ == null) {
          return rinnert_.get(index);  } else {
          return rinnertBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public java.util.List<? extends MessageT1.Test1.InnerTest1OrBuilder> 
           getRinnertOrBuilderList() {
        if (rinnertBuilder_ != null) {
          return rinnertBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rinnert_);
        }
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public MessageT1.Test1.InnerTest1.Builder addRinnertBuilder() {
        return getRinnertFieldBuilder().addBuilder(
            MessageT1.Test1.InnerTest1.getDefaultInstance());
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public MessageT1.Test1.InnerTest1.Builder addRinnertBuilder(
          int index) {
        return getRinnertFieldBuilder().addBuilder(
            index, MessageT1.Test1.InnerTest1.getDefaultInstance());
      }
      /**
       * <code>repeated .Test1.InnerTest1 rinnert = 8;</code>
       */
      public java.util.List<MessageT1.Test1.InnerTest1.Builder> 
           getRinnertBuilderList() {
        return getRinnertFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder> 
          getRinnertFieldBuilder() {
        if (rinnertBuilder_ == null) {
          rinnertBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              MessageT1.Test1.InnerTest1, MessageT1.Test1.InnerTest1.Builder, MessageT1.Test1.InnerTest1OrBuilder>(
                  rinnert_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          rinnert_ = null;
        }
        return rinnertBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Test1)
    }

    // @@protoc_insertion_point(class_scope:Test1)
    private static final MessageT1.Test1 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MessageT1.Test1();
    }

    public static MessageT1.Test1 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Test1>
        PARSER = new com.google.protobuf.AbstractParser<Test1>() {
      @java.lang.Override
      public Test1 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Test1(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Test1> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Test1> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public MessageT1.Test1 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Test1_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Test1_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Test1_InnerTest1_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Test1_InnerTest1_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020message-t1.proto\"\221\002\n\005Test1\022\n\n\002id\030\001 \002(\005" +
      "\022\r\n\005rival\030\002 \003(\005\022\r\n\005sval1\030\003 \001(\t\022\r\n\005ival2\030" +
      "\004 \001(\005\022\r\n\005rsval\030\005 \003(\t\022\"\n\007innert1\030\006 \001(\0132\021." +
      "Test1.InnerTest1\022\"\n\007innert2\030\007 \001(\0132\021.Test" +
      "1.InnerTest1\022\"\n\007rinnert\030\010 \003(\0132\021.Test1.In" +
      "nerTest1\032T\n\nInnerTest1\022\n\n\002id\030\001 \002(\005\022\r\n\005ri" +
      "val\030\002 \003(\005\022\r\n\005sval1\030\003 \001(\t\022\r\n\005ival2\030\004 \001(\005\022" +
      "\r\n\005rsval\030\005 \003(\t"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_Test1_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Test1_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Test1_descriptor,
        new java.lang.String[] { "Id", "Rival", "Sval1", "Ival2", "Rsval", "Innert1", "Innert2", "Rinnert", });
    internal_static_Test1_InnerTest1_descriptor =
      internal_static_Test1_descriptor.getNestedTypes().get(0);
    internal_static_Test1_InnerTest1_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Test1_InnerTest1_descriptor,
        new java.lang.String[] { "Id", "Rival", "Sval1", "Ival2", "Rsval", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
